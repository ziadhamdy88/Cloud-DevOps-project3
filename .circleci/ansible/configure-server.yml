---

- name: "configuration play." 
  hosts: web
  remote_user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml

  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      wait_for_connection:
        timeout: 600
      #pause:
      #  seconds: 120
      # Your code here

    - name: "install python for Ansible."
      become: true
      #apt:
      #  name: "python3-pip"
      #  update-cache: yes
      #  state: present
      raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
      changed_when: false
    
    #- name: "Upgrade packages"
    #  become: true
    #  apt:
    #    name: "*"
    #    state: latest
    
    #- name: Install nodejs and npm
    #  become: true
    #  apt:
    #    name: ["nodejs", "npm"]
    #    state: latest
    #    update_cache: yes
    
    #- name: Install pm2
    #  become: true
    #  npm:
    #    name: pm2
    #    global: yes
    #    production: yes
    #    state: present
      # Your code here

  # Get the environment variables from CircleCI and add to the EC2 instance
  #environment:
  #  - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
  #  - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
  #  - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
  #  - TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT')}}"
  #  - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
  #  - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
  #  - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
  #  - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
  #  - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"
    # Add more env vars here

  roles:
    - configure-server
    # Your code here